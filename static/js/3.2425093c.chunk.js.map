{"version":3,"sources":["../node_modules/react-bootstrap/esm/Table.js","Components/Cart.js"],"names":["Table","React","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_jsx","responsiveClass","children","Cart","state","useSelector","dispatch","useDispatch","useState","alertStates","SetalertStates","reducer","map","data","i","id","name","onClick","type","index","quan","price"],"mappings":"qSAuCeA,EAnCYC,cAAiB,WAWzCC,GAAQ,IAVTC,EAUS,EAVTA,SACAC,EASS,EATTA,UACAC,EAQS,EARTA,QACAC,EAOS,EAPTA,SACAC,EAMS,EANTA,WACAC,EAKS,EALTA,MACAC,EAIS,EAJTA,KACAC,EAGS,EAHTA,QACAC,EAES,EAFTA,WACGC,EACM,iBACHC,EAAoBC,YAAmBX,EAAU,SACjDY,EAAUC,IAAWZ,EAAWS,EAAmBH,GAAW,GAAJ,OAAOG,EAAP,YAA4BH,GAAWD,GAAQ,GAAJ,OAAOI,EAAP,YAA4BJ,GAAQJ,GAAW,GAAJ,OAAOQ,EAAP,YAAoCP,GAAY,GAAJ,OAAOO,EAAP,aAAqCN,GAAc,GAAJ,OAAOM,EAAP,eAAuCL,GAAS,GAAJ,OAAOK,EAAP,WAEvRI,EAAqBC,cAAK,QAAD,YAAC,eAAcN,GAAf,IAC7BR,UAAWW,EACXb,IAAKA,KAGP,GAAIS,EAAY,CACd,IAAIQ,EAAkB,GAAH,OAAMN,EAAN,eAMnB,MAJ0B,kBAAfF,IACTQ,EAAkB,GAAH,OAAMA,EAAN,YAAyBR,IAGtBO,cAAK,MAAO,CAC9Bd,UAAWe,EACXC,SAAUH,IAId,OAAOA,K,eCqDMI,UArFf,SAAcT,GACZ,IAAMU,EAAQC,aAAY,SAACD,GAAD,OAAWA,KAG/BE,EAAWC,cACjB,EAAsCC,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,OACE,qCACE,qBAAKxB,UAAU,uBAAf,SACE,eAAC,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACE,OAAK,EAA7B,UACE,gCACE,+BACE,qCACA,oDACA,8CACA,mDAGJ,gCAEGc,EAAMO,QAAQC,KAAI,SAACC,EAAMC,GACxB,OACE,+BACE,6BAAKD,EAAKE,KACV,6BAAKF,EAAKG,OACV,qBAAI9B,UAAU,YAAd,UACE,wBACEA,UAAU,SACV+B,QAAS,WAEPX,EAAS,CAAEY,KAAM,QAAUC,MAAQN,EAAKE,GAAK,KAJjD,eASCF,EAAKO,KACN,wBACElC,UAAU,SACV+B,QAAS,WACPX,EAAS,CAAEY,KAAM,MAAQC,MAAQN,EAAKE,GAAK,KAH/C,kBASF,6BAAKF,EAAKQ,UAvBHP,cAuCF,IAAhBL,EACC,sBAAKvB,UAAU,QAAf,UACE,0EACA,wBACE+B,QAAS,WACPP,GAAe,IAFnB,6BAQA","file":"static/js/3.2425093c.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-striped`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;","import React, { useState } from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport \"styles/cart.scss\";\r\n\r\nfunction Cart(props) {\r\n  const state = useSelector((state) => state);\r\n  // const state = useSelector((state) => state.reducer); \r\n  // 다 가져오지않고 위 코드처럼 state.가져올reducer이름 을 넣어서도 가능하다.\r\n  const dispatch = useDispatch();\r\n  const [alertStates, SetalertStates] = useState(true);\r\n  return (\r\n    <>\r\n      <div className=\"table-wrap px-5 py-5\">\r\n        <Table striped bordered hover>\r\n          <thead>\r\n            <tr>\r\n              <th>no.</th>\r\n              <th>상품명</th>\r\n              <th>수량</th>\r\n              <th>금액</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {/* {props.state.map((data, i) => { */}\r\n            {state.reducer.map((data, i) => {\r\n              return (\r\n                <tr key={i}>\r\n                  <td>{data.id}</td>\r\n                  <td>{data.name}</td>\r\n                  <td className=\"quan-line\">\r\n                    <button\r\n                      className=\"button\"\r\n                      onClick={() => {\r\n                        // props.dispatch({ type: \"minus\" });\r\n                        dispatch({ type: \"minus\" , index : data.id - 1 });\r\n                      }}\r\n                    >\r\n                      -\r\n                    </button>\r\n                    {data.quan}\r\n                    <button\r\n                      className=\"button\"\r\n                      onClick={() => {\r\n                        dispatch({ type: \"add\" , index : data.id - 1});\r\n                      }}\r\n                    >\r\n                      +\r\n                    </button>\r\n                  </td>\r\n                  <td>{data.price}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n\r\n      {/* {props.alertstate === true ? (\r\n        <div className=\"alert\">\r\n          <p>지금 구매하면 20%</p>\r\n          <button onClick={() => {\r\n            props.dispatch({type: \"close\"});\r\n          }}>닫기</button>\r\n        </div>\r\n      ) : null} */}\r\n      {alertStates === true ? (\r\n        <div className=\"alert\">\r\n          <p>지금 구매하면 20%</p>\r\n          <button\r\n            onClick={() => {\r\n              SetalertStates(false);\r\n            }}\r\n          >\r\n            닫기\r\n          </button>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n// function CartState(state) {\r\n//   // redux store의 데이터를 가져와서 props로 변환해주는 함수\r\n//   return {\r\n//     //상품명 : state.name, // index에 있는 store정보 가져오기!\r\n//     state: state.reducer, // state라는 이름의 props로 변경하기\r\n//     alertstate: state.alertReducer,\r\n//   };\r\n// }\r\n// export default connect(CartState)(Cart);\r\nexport default Cart;\r\n"],"sourceRoot":""}